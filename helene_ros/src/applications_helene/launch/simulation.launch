<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>

  <arg name="world_name" default="worlds/empty.world"/>
  
  <arg name="end_effector" default="led_head"/>
  <arg name="end_effector_package" default=""/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
    <arg name="verbose" value="true"/>
  </include>

  <!-- send robot urdf to param server -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro '$(find hw_description)/urdf/helene_hw.urdf'"/> -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find hw_description)/urdf/helene_with_tool.xacro'
      end_effector:=$(arg end_effector)
      end_effector_package:=$(arg end_effector_package)"/>

  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model helene_arm -x 0 -y 0 -z 0"
    respawn="false" output="screen" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find moveit_helene)/config/gazebo_controllers.yaml" command="load"/>

  <!-- Load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" ns="/helene" output="screen" 
          args="--namespace=/helene
          joint_state_controller
          arm_controller
          --timeout 20"/>
  <!-- load other controllers -->
  <node name="controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" ns="/helene" output="screen" args="load effort_group" />
        
        
<!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />
  <!--
  By default, hide joint_state_publisher's GUI
  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />
  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find moveit_helene)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="end_effector_package" value="$(arg end_effector_package)"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <rosparam param="source_list">[helene/joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find moveit_helene)/launch/move_group.launch">
    <arg name="simulated" value="true"/>
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="end_effector_package" value="$(arg end_effector_package)"/>
  </include>  

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find moveit_helene)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find moveit_helene)/launch/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

</launch>
